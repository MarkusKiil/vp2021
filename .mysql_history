source
Filmibaas_2021_T
source
Filmibaas_2021_T
EXIT
/h
end
 CREATE DATABASE IF NOT EXISTS AB_nimi character set = 'utf8mb4'
COLLATE = 'utf8mb4_estonian_ci';
CREATE DATABASE IF NOT EXISTS AB_nimi character set = 'utf8mb4' COLLATE = 'utf8mb4_estonian_ci';
USE AB_nimi;
mysq -uif21 -pif21 AB_nimi
/g
;
mysq -uif21 -pif21 AB_nimi /g;
 CREATE DATABASE IF NOT EXISTS AB_nimi character set = 'utf8mb4'
COLLATE = 'utf8mb4_estonian_ci';
CREATE DATABASE IF NOT EXISTS AB_nimi character set = 'utf8mb4' COLLATE = 'utf8mb4_estonian_ci';
if21_Markus_Ki
if21_Markus_Ki;
if21_Markus_Ki if21_Markus_Ki;
CREATE DATABASE IF NOT EXISTS AB_Markus_Kiil character set = 'utf8mb4' COLLATE = 'utf8mb4_estonian_ci';
CREATE DATABASE IF NOT EXISTS AB_Markus_Kiil character set = 'utf8mb4'
COLLATE = 'utf8mb4_estonian_ci';
CREATE DATABASE IF NOT EXISTS AB_Markus_Kiil character set = 'utf8mb4' COLLATE = 'utf8mb4_estonian_ci';
CREATE DATABASE IF NOT EXISTS AB_Markus_Kiil character set = 'utf8mb4'COLLATE= 'utf8mb4_estonian_ci';
CREATE DATABASE IF NOT EXISTS if21_Markus_Kiil character set = 'utf8mb4' COLLATE = 'utf8mb4_estonian_ci' ;
USE if21_Markus_Kiil;
SHOW DATABASE;
SHOW DATABASES;
SHOW TABLES;
CREATE TABLE film(pealkiri VARCHAR(50),
aasta INTEGER,
kestus INTEGER,
zanr VARCHAR(50),
tootja VARCHAR(50),
lavastaja VARCHAR(50)
);
CREATE TABLE film(pealkiri VARCHAR(50), aasta INTEGER, kestus INTEGER, zanr VARCHAR(50), tootja VARCHAR(50), lavastaja VARCHAR(50) );
DELETE TABLE;
INSERT INTO koer (nimi, t6ug, kiip) VALUES ('Pontu','krants',666666),('Axel von der Hundewelt','saksa lambakoer',123456);
CREATE TABLE IF NOT EXISTS koer(kiip INT PRIMARY KEY,
 nimi VARCHAR(100),
 t6ug VARCHAR(20));
CREATE TABLE IF NOT EXISTS koer(kiip INT PRIMARY KEY,  nimi VARCHAR(100),  t6ug VARCHAR(20));
INSERT INTO koer (nimi, t6ug, kiip) VALUES ('Pontu','krants',666666),('Axel von der Hundewelt','saksa lambakoer',123456);
INSERT INTO koer VALUES ('Axel von der Hundewelt','saksa lambakoer',123456);
SHOW COLUMNS FROM tabeli-nimi;
SHOW COLUMNS FROM koer;
SHOW COLUMNS FROM film;
INSERT INTO koer VALUES ('Pontu','krants',666666),('Axel von der Hundewelt','saksa lambakoer',123456);
INSERT INTO koer VALUES (nimi, t6ug, kiip) ('Pontu','krants',666666),('Axel von der Hundewelt','saksa lambakoer',123456);
INSERT INTO koer (nimi, t6ug, kiip) VALUES ('Pontu','krants',666666),('Axel von der Hundewelt','saksa lambakoer',123456);
INSERT INTO koer (nimi, t6ug, kiip) VALUES ('Pontu','krants',66666),('Axel von der Hundewelt','saksa lambakoer',123456);
INSERT INTO koer (nimi, t6ug, kiip) VALUES ('Pontu','krants',66666),('Axel von der Hundewelt','saksa lambakoer',12345);
SHOW COLUMNS FROM koer;
INSERT into filmid_utf8.txt ('Siin me oleme', 1978, 67,'Komöödia', 'Eesti Telefilm', 'Sulev Nõmmik')
'Don Juan Tallinnas', 1971, 65, 'Muusikafilm, komöödia', 'Tallinnfilm',
'Arvo Kruusement'
'Hukkunud alpinisti hotell', 1979, 80, 'Detektiivfilm, Põnevusfilm, Ulmefilm', 'Tallinnfilm', 'Grigori Kromanov'
'Kevade', 1969 ,84 ,'Komöödia, Draama', 'Tallinnfilm', 'Arvo Kruusement'
'Viini postmark', 1967, 91, 'Komöödia', 'Tallinnfilm', 'Veljo Käsper'
'Mehed ei nuta', 1968, 78, 'Komöödia', 'Eesti Telefilm', 'Sulev Nõmmik'
'Noor pensionär', 1972, 80, 'Komöödia', 'Eesti Telefilm', 'Sulev Nõmmik');
INSERT into filmid_utf8.txt ('Siin me oleme', 1978, 67,'Komöödia', 'Eesti Telefilm', 'Sulev Nõmmik') 'Don Juan Tallinnas', 1971, 65, 'Muusikafilm, komöödia', 'Tallinnfilm', 'Arvo Kruusement' 'Hukkunud alpinisti hotell', 1979, 80, 'Detektiivfilm, Põnevusfilm, Ulmefilm', 'Tallinnfilm', 'Grigori Kromanov' 'Kevade', 1969 ,84 ,'Komöödia, Draama', 'Tallinnfilm', 'Arvo Kruusement' 'Viini postmark', 1967, 91, 'Komöödia', 'Tallinnfilm', 'Veljo Käsper' 'Mehed ei nuta', 1968, 78, 'Komöödia', 'Eesti Telefilm', 'Sulev Nõmmik' 'Noor pensionär', 1972, 80, 'Komöödia', 'Eesti Telefilm', 'Sulev Nõmmik');
INSERT into filmid_utf8.txt ('Siin me oleme', 1978, 67,'Komöödia', 'Eesti Telefilm', 'Sulev Nõmmik') ('Don Juan Tallinnas', 1971, 65, 'Muusikafilm, komöödia', 'Tallinnfilm', 'Arvo Kruusement') ('Hukkunud alpinisti hotell', 1979, 80, 'Detektiivfilm, Põnevusfilm, Ulmefilm', 'Tallinnfilm', 'Grigori Kromanov') ('Kevade', 1969 ,84 ,'Komöödia, Draama', 'Tallinnfilm', 'Arvo Kruusement') ('Viini postmark', 1967, 91, 'Komöödia', 'Tallinnfilm', 'Veljo Käsper') ('Mehed ei nuta', 1968, 78, 'Komöödia', 'Eesti Telefilm', 'Sulev Nõmmik') ('Noor pensionär', 1972, 80, 'Komöödia', 'Eesti Telefilm', 'Sulev Nõmmik');
INSERT INTO filmid_utf8.txt ('Suvi', 1976, 81, 'Kom66dia','Tallinnfilm','Arvo Kruusement');
INSERT INTO filmid_utf8.txt ('Suvi', 1976, 81 ,'Kom66dia','Tallinnfilm','Arvo Kruusement');
INSERT INTO filmid_utf8.txt ('Suvi', 1976, 81 ,'Kom66dia', 'Tallinnfilm', 'Arvo Kruusement');
INSERT INTO filmid_utf8.txt ('Suvi', 1976, 81 ,'Kom66dia','Tallinnfilm','Arvo Kruusement');
INSERT INTO filmid_utf8.txt VALUES ('Suvi', 1976, 81 ,'Kom66dia','Tallinnfilm','Arvo Kruusement');
INSERT INTO filmid_utf8.txt ('Suvi', 1976, 81 ,'Kom66dia','Tallinnfilm','Arvo Kruusement');
INSERT INTO filmid_utf8.txt ('Suvi', 1976, 81 ,'Tallinnfilm','Arvo Kruusement','kom66dia');
INSERT INTO filmid_utf8.txt ('Suvi',1976,81,'Tallinnfilm','Arvo Kruusement','kom66dia');
SHOW COLUMNS in film<
;
SHOW COLUMNS in film;
SHOW TABLES
;
SHOW DATABASES
;
film;
SHOW COLUMNS IN film;
SHOW TABLES
;
SHOW COLUMNS FROM film;
INSERT INTO filmid_utf8.txt ('Suvi', 1976, 81 ,'Tallinnfilm','Arvo Kruusement','kom66dia');
/h;
'/h';
help;
INSERT INTO filmid_utf8.txt ('Siin me oleme', 1978, 67,'Komöödia', 'Eesti Telefilm', 'Sulev Nõmmik');
INSERT INTO film VALUES ('Siin me oleme', 1978, 67,'Komöödia', 'Eesti Telefilm', 'Sulev Nõmmik');
INSERT INTO film VALUES ('Don Juan Tallinnas', 1971, 65, 'Muusikafilm, komöödia', 'Tallinnfilm', 'Arvo Kruusement');
INSERT INTO film VALUES ('Hukkunud alpinisti hotell', 1979, 80, 'Detektiivfilm, Põnevusfilm, Ulmefilm', 'Tallinnfilm', 'Grigori Kromanov');
INSERT INTO film VALUES ('Kevade', 1969 ,84 ,'Komöödia, Draama', 'Tallinnfilm', 'Arvo Kruusement');
INSERT INTO film VALUES ('Viini postmark', 1967, 91, 'Komöödia', 'Tallinnfilm', 'Veljo Käsper')
INSERT INTO film VALUES ('Mehed ei nuta', 1968, 78, 'Komöödia', 'Eesti Telefilm', 'Sulev Nõmmik');
INSERT INTO film VALUES ('Noor pensionär', 1972, 80, 'Komöödia', 'Eesti Telefilm', 'Sulev Nõmmik');
INSERT INTO film VALUES ('Suvi', 1976, 81, 'Komöödia', 'Tallinnfilm', 'Arvo Kruusement');
INSERT INTO film VALUES ('200 grammi suhkrut, näputäis soola', 2020, 09, 'Tudengifilm', 'BFM', 'Sedef Dündar');
VALUES film
;
SHOW COLUMNS FROM film;
SHOW TABLE 
;
SHOW TABLES;
cd
;
SELECT * FROM film;
SELECT pealkiri, aasta FROM film;
SELECT Tallinnfilm FROM film;
SELECT * FROM film;
SELECT tootja Tallinnfilm FROM film;
SELECT tootja, Tallinnfilm FROM film;
SELECT tootja, Tallinnfilm FROM film WHERE tootja = 'Tallinnfilm';
SELECT tootja, nimi FROM film WHERE tootja = 'Tallinnfilm';
SELECT tootja FROM film WHERE tootja = 'Tallinnfilm';
SELECT tootja, pealkiri FROM film WHERE tootja = 'Tallinnfilm';
SELECT pealkiri, aasta, tootja FROM film WHERE tootja = 'Tallinnfilm', aasta = 1900-2021;
SELECT pealkiri, aasta, tootja FROM film WHERE tootja = 'Tallinnfilm';
SELECT pealkiri, aasta, tootja FROM film WHERE tootja = 'Tallinnfilm' ORDER BY 1971 ASC;
SELECT pealkiri, aasta, tootja FROM film ORDER BY 1971 ASC;
SELECT pealkiri, aasta, tootja FROM film ORDER BY aasta ASC;
SELECT pealkiri, aasta, tootja FROM film ORDER BY aasta ASC, WHERE tootja = 'Tallinnfilm';
SELECT pealkiri, aasta, tootja FROM film ORDER BY aasta ASC WHERE tootja = 'Tallinnfilm';
SELECT pealkiri, aasta, tootja FROM film ORDER BY aasta ASC AND  WHERE tootja = 'Tallinnfilm';
SELECT pealkiri, aasta, tootja FROM film ORDER BY aasta ASCWHERE tootja = 'Tallinnfilm';
SELECT pealkiri, aasta, tootja FROM film ORDER BY aasta ASCWHERE tootja = 'Tallinnfilm'
,';
;
;;;;
,
;
lololo;
if21_Markus_Kiil
;
USE if21_Markus_Kiil;
SHOW COLUMNS FROM film
;
SELECT * FROM film;
SELECT pealkiri, aasta, tootja FROM film WHERE aasta = 2020
;
SELECT pealkiri, aasta, tootja FROM film WHERE aasta < 2020;
SELECT pealkiri, aasta, tootja FROM film WHERE tootja = 'Tallinnfilm';
SELECT pealkiri, aasta, tootja FROM film WHERE tootja = 'Tallinnfilm' (ORDER BY aasta ASC);
SELECT pealkiri, aasta, tootja FROM film WHERE tootja = 'Tallinnfilm' ORDER BY aasta ASC;
SELECT pealkiri, kestus FROM film WHERE tootja = 'Tallinnfilm' ORDER BY aasta ASC;
SELECT pealkiri, aasta,kestus, tootja FROM film WHERE tootja = 'Tallinnfilm' ORDER BY aasta ASC;
SELECT pealkiri, aasta, kestus, tootja FROM film WHERE tootja = 'Tallinnfilm' ORDER BY aasta = 'Tuhat üheksada kuuskümmend seitse';
SELECT pealkiri, aasta, kestus, tootja FROM film WHERE aasta = 'nimi'
;
SELECT pealkiri, aasta, kestus, tootja FROM film WHERE aasta = 'nimi';
SELECT pealkiri, aasta, kestus, tootja FROM film WHERE aasta = '1970';
source AB_2021_MarkusK1
source AB_2021_MarkusK1;
SHOW tables
;
source vprg_users;
SHOW COLUMNS FROM vprg_users;
SOURCE AB_2021_MarkusK1
LOAD DATA LOCAL INFILE 'faili-nimi' INTO TABLE tabelinimi FIELDS TERMINATED BY ','
ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'faili-nimi' INTO TABLE tabelinimi FIELDS TERMINATED BY ',' ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'AB_2021_MarkusK1' INTO TABLE Filmimaailm_create.sql FIELDS TERMINATED BY ',' ENCLOSED BY '"';
SOURCE AB_2021_MarkusK1;
Source AB_2021_MarkusK1
source
source AB_2021_MarkusK1
CREATE AB_2021_MarkusK1
;
 SOURCE filmid;
 SOURCE film;
SOURCE film;
SHOW TABLES;
SHOW CLOUMNS FROM fail;
SHOW CLOUMNS FROM film;
SHOW CLOUMNS FROM koer;
SHOW CLOUMNS FROM fil,;
SHOW CLOUMNS FROM film;
SHOW COLUMNS FROM film;
SELECT  first_name, person_in_movie.role FROM person JOIN person_in_movie ON person.id = person_in_movie.person_id
;
SOURCE film;
SOURCE AB_2021_MarkusK1;
SOURCE AB_MarkusK1;
SOURCE film;
show databases;
show tables;
SOURCE koer;
SOURCE AB_MarkusK1
source if21_Markus_Kiil;
LOAD DATA LOCAL INFILE 'faili-nimi' INTO TABLE tabelinimi FIELDS TERMINATED BY ','
ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'faili-nimi' INTO TABLE tabelinimi FIELDS TERMINATED BY ',' ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'AB_MarkusK1' INTO TABLE film FIELDS TERMINATED BY ',' ENCLOSED BY '"';
SELECT * FROM film;
SHOW tables;
SHOW COLUMNS FROM film;
LOAD DATA LOCAL INFILE 'AB_MarkusK1T' INTO TABLE TABLES_in_if21_Markus_Kiil FIELDS TERMINATED BY ',' ENCLOSED BY '"';
CREATE TABLE movie (
    id int NOT NULL AUTO_INCREMENT,
    title varchar(100) NOT NULL,
    duration int NOT NULL,
    production_year int NOT NULL,
    description varchar(500) NULL,
    CONSTRAINT movie_pk PRIMARY KEY (id)
);
CREATE TABLE movie (     id int NOT NULL AUTO_INCREMENT,     title varchar(100) NOT NULL,     duration int NOT NULL,     production_year int NOT NULL,     description varchar(500) NULL,     CONSTRAINT movie_pk PRIMARY KEY (id) );
SHOW TABLES;
CREATE TABLE person (
    id int NOT NULL AUTO_INCREMENT,
    firstname varchar(100) NOT NULL,
    lastname varchar(100) NOT NULL,
    date_of_birth date NOT NULL,
    CONSTRAINT person_pk PRIMARY KEY (id)
);
CREATE TABLE person (     id int NOT NULL AUTO_INCREMENT,     firstname varchar(100) NOT NULL,     lastname varchar(100) NOT NULL,     date_of_birth date NOT NULL,     CONSTRAINT person_pk PRIMARY KEY (id) );
CREATE TABLE person_in_movie (
    id int NOT NULL AUTO_INCREMENT,
    person_id int NOT NULL,
    movie_id int NOT NULL,
    position_id int NOT NULL,
    role varchar(100) NULL,
    CONSTRAINT person_in_movie_pk PRIMARY KEY (id)
);
CREATE TABLE person_in_movie (     id int NOT NULL AUTO_INCREMENT,     person_id int NOT NULL,     movie_id int NOT NULL,     position_id int NOT NULL,     role varchar(100) NULL,     CONSTRAINT person_in_movie_pk PRIMARY KEY (id) );
CREATE TABLE position (
    id int NOT NULL AUTO_INCREMENT,
    position_name varchar(100) NOT NULL,
    CONSTRAINT position_pk PRIMARY KEY (id)
);
CREATE TABLE position (     id int NOT NULL AUTO_INCREMENT,     position_name varchar(100) NOT NULL,     CONSTRAINT position_pk PRIMARY KEY (id) );
ALTER TABLE person_in_movie ADD CONSTRAINT person_in_movie_movie FOREIGN KEY person_in_movie_movie (movie_id)
    REFERENCES movie (id);
ALTER TABLE person_in_movie ADD CONSTRAINT person_in_movie_movie FOREIGN KEY person_in_movie_movie (movie_id)     REFERENCES movie (id);
ALTER TABLE person_in_movie ADD CONSTRAINT person_in_movie_person FOREIGN KEY person_in_movie_person (person_id)
    REFERENCES person (id);
ALTER TABLE person_in_movie ADD CONSTRAINT person_in_movie_person FOREIGN KEY person_in_movie_person (person_id)     REFERENCES person (id);
ALTER TABLE person_in_movie ADD CONSTRAINT person_in_movie_position FOREIGN KEY person_in_movie_position (position_id)
    REFERENCES position (id);
ALTER TABLE person_in_movie ADD CONSTRAINT person_in_movie_position FOREIGN KEY person_in_movie_position (position_id)     REFERENCES position (id);
SHOW TABLES;
LOAD DATA LOCAL INFILE 'faili-nimi' INTO TABLE tabelinimi FIELDS TERMINATED BY ','
ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'faili-nimi' INTO TABLE tabelinimi FIELDS TERMINATED BY ',' ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'person_in_movie.txt' INTO TABLE person_in_movie FIELDS TERMINATED BY ',' ENCLOSED BY '"';
SHOW TABLES;
SOURCE markkii;
SOURCE AB_MarkusK1;
SOURCE Filmibaas_2021_T_create.sql;
LOAD DATA LOCAL INFILE 'person_in_movie.txt' INTO TABLE person_in_movie FIELDS TERMINATED BY ',' ENCLOSED BY '"';
SOURCE Filmibaas_2021_T_create.sql;
SOURCE Filmibaas_2021_T_drop.sql;
SHOW TABLES;
SOURCE Filmibaas_2021_T_create.sql;
SHOW TABLES;
LOAD DATA LOCAL INFILE 'faili-nimi' INTO TABLE tabelinimi FIELDS TERMINATED BY ','
ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'faili-nimi' INTO TABLE tabelinimi FIELDS TERMINATED BY ',' ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'person_in_movie.txt' INTO TABLE person_in_movie FIELDS TERMINATED BY ',' ENCLOSED BY '"';
show columns from movie;
show columns from person;
show columns from person_in_movie;
show columns from position;
LOAD DATA LOCAL INFILE 'person_in_movie(1).txt' INTO TABLE person_in_movie FIELDS TERMINATED BY ',' ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'person_in_movie.txt' INTO TABLE person_in_movie FIELDS TERMINATED BY ',' ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'person.txt' INTO TABLE person FIELDS TERMINATED BY ',' ENCLOSED BY '"';
SELECT * FROM VPRG_USERS; 
SELECT * FROM vprg_users; 
SHOW TABLES;
Show columns
;
SHOW COLUMNS;
SHOW * FROM movie;
SHOW * For movie;
SELECT * FROM movie
;
LOAD DATA LOCAL INFILE 'faili-nimi' INTO TABLE tabelinimi FIELDS TERMINATED BY ','
ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'faili-nimi' INTO TABLE tabelinimi FIELDS TERMINATED BY ',' ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'ab_markus_kiil' INTO TABLE movie FIELDS TERMINATED BY ',' ENCLOSED BY '"';
Select * from movie
;
Select * from movie;
SHow tables;
SHOW COLUMNS FROM movie;
SHOW COLUMNS FROM person;
Select * from movie;
Select * from film;
LOAD DATA LOCAL INFILE 'movie.txt' INTO TABLE movie FIELDS TERMINATED BY ',' ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'ab_markus_kiil' INTO TABLE movie FIELDS TERMINATED BY ',' ENCLOSED BY '"';
LOAD DATA LOCAL INFILE 'movie.txt' INTO TABLE movie FIELDS TERMINATED BY ',' ENCLOSED BY '"';
SHOE warnings;
SHOw warnings;
Select * from movie;
LOAD DATA LOCAL INFILE 'person_in_movie.txt' INTO TABLE person_in_movie FIELDS TERMINATED BY ',' ENCLOSED BY '"';
Show warnings;
ALTER TABLE person_in_movie
    DROP FOREIGN KEY person_in_movie_movie;
ALTER TABLE person_in_movie     DROP FOREIGN KEY person_in_movie_movie;
ALTER TABLE person_in_movie
    DROP FOREIGN KEY person_in_movie_person;
ALTER TABLE person_in_movie     DROP FOREIGN KEY person_in_movie_person;
ALTER TABLE person_in_movie
    DROP FOREIGN KEY person_in_movie_position;
ALTER TABLE person_in_movie     DROP FOREIGN KEY person_in_movie_position;
DROP TABLE movie;
DROP TABLE person;
DROP TABLE person_in_movie;
DROP TABLE position;
Show tables;
